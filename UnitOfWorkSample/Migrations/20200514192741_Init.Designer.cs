// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitOfWorkSample.Implementation.Sql.Context;

namespace UnitOfWorkSample.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20200514192741_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnitOfWorkSample.Model.Locale", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Locales");

                    b.HasData(
                        new
                        {
                            Id = "hu-HU"
                        },
                        new
                        {
                            Id = "en-GB"
                        },
                        new
                        {
                            Id = "de-DE"
                        });
                });

            modelBuilder.Entity("UnitOfWorkSample.Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("UnitOfWorkSample.Model.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("UnitOfWorkSample.Model.Partner+LocaleConnection", b =>
                {
                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("LocaleId")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("PartnerId", "LocaleId");

                    b.HasIndex("LocaleId");

                    b.ToTable("Locales","Partner");
                });

            modelBuilder.Entity("UnitOfWorkSample.Model.Organization", b =>
                {
                    b.HasOne("UnitOfWorkSample.Model.Partner", "Partner")
                        .WithMany("Organizations")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnitOfWorkSample.Model.Partner+LocaleConnection", b =>
                {
                    b.HasOne("UnitOfWorkSample.Model.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("LocaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnitOfWorkSample.Model.Partner", "Partner")
                        .WithMany("Locales")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
